name: apk-build

on:
  workflow_dispatch:
    inputs:
      create_release:
        description: "GitHub Release erstellen und APK anhängen?"
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - uses: android-actions/setup-android@v3

      - name: Restore keystore from secret
        if: ${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 !=  }}
        run: echo "$ANDROID_SIGNING_KEYSTORE_BASE64" | base64 -d > "$HOME/release.jks"
        env:
          ANDROID_SIGNING_KEYSTORE_BASE64: ${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 }}

      - name: Configure Gradle signing (if keystore present)
        run: |
          if [ -f "$HOME/release.jks" ]; then
            mkdir -p ~/.gradle
            cat > ~/.gradle/gradle.properties <<EOF
            MY_SIGNING_STORE_FILE=${HOME}/release.jks
            MY_SIGNING_STORE_PASSWORD=${{ secrets.ANDROID_SIGNING_KEYSTORE_PASSWORD }}
            MY_SIGNING_KEY_ALIAS=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
            MY_SIGNING_KEY_PASSWORD=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
            EOF
          else
            echo "No keystore provided – baue unsigned APK."
          fi

      - name: Build (assembleRelease)
        run: |
          set -e
          if [ -x ./gradlew ]; then
            chmod +x ./gradlew
            ./gradlew --no-daemon assembleRelease
          elif [ -x ./android/gradlew ]; then
            chmod +x ./android/gradlew
            (cd android && ./gradlew --no-daemon assembleRelease)
          else
            echo "Gradle wrapper nicht gefunden"; exit 1
          fi

      - name: Upload artifact (android-apk)
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            **/build/outputs/apk/release/*.apk
          if-no-files-found: error
          retention-days: 7

      - name: Create GitHub Release and upload APK(s)
        if: ${{ inputs.create_release == true }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Build ${{ github.run_number }}"
          draft: false
          prerelease: false
          files: |
            **/build/outputs/apk/release/*.apk
