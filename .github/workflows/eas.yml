name: EAS Build

on:
  workflow_dispatch:
    inputs:
      easProfile:
        description: EAS profile name (e.g. production, preview)
        required: false
        default: production
        type: string
      platform:
        description: Target platform
        required: false
        default: android
        type: choice
        options: [android, ios, all]
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: |
          npm ci --no-audit --no-fund
          npm i -g eas-cli@latest

      - name: Verify Expo auth
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          eas whoami || { echo "EXPO_TOKEN fehlt/ungÃ¼ltig"; exit 1; }

      - name: EAS Build (wait + json)
        id: eas
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          PROFILE: ${{ inputs.easProfile }}
          PLATFORM: ${{ inputs.platform }}
        run: |
          : "${PROFILE:=production}"
          : "${PLATFORM:=android}"
          npx eas build -p "$PLATFORM" --profile "$PROFILE" --non-interactive --wait --json > build.json
          cat build.json

      - name: Artefakt-URL extrahieren
        id: url
        run: |
          URL="$(jq -r '..|.buildUrl? // empty' build.json | head -n1)"
          if [ -z "$URL" ] || [ "$URL" = "null" ]; then
            echo "Keine buildUrl in build.json gefunden"; cat build.json; exit 1
          fi
          echo "artifact_url=$URL" >> "$GITHUB_OUTPUT"

      - name: Artefakt herunterladen
        run: |
          mkdir -p dist
          # Der Dateiname kommt von EAS (apk/aab/ipa). Wir nehmen den Namen aus dem Redirect.
          FINAL_URL="$(curl -sIL "${{ steps.url.outputs.artifact_url }}" | awk '/^location:/I {print $2}' | tail -n1 | tr -d '\r')"
          [ -z "$FINAL_URL" ] && FINAL_URL="${{ steps.url.outputs.artifact_url }}"
          fname="app-download"
          curl -fL "$FINAL_URL" -o "dist/$fname"
          file "dist/$fname" || true
          ls -lah dist

      - name: Upload GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ inputs.platform || 'android' }}
          path: dist/*
