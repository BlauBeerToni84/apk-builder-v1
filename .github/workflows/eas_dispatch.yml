name: EAS Build
on:
  workflow_dispatch:
    inputs:
      easProfile:
        description: "EAS profile"
        required: true
        default: "production"

jobs:
  build:
    runs-on:
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }} ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps (npm only)
        run: npm ci --no-audit --no-fund

      - name: Install EAS CLI (global)
        run: npm i -g eas-cli@16

      # === WICHTIG: Expo-Projekt finden/erzeugen und ID in $GITHUB_ENV schreiben ===
      - name: Resolve Expo Project ID (link if needed)
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          set -euo pipefail
          set -e
          echo "[INFO] prüfe Expo-Link…"
          if eas project:info --json >/tmp/eas_info.json 2>/dev/null; then
            ID="$(jq -r '.id // empty' /tmp/eas_info.json || true)"
            echo "[OK] verlinkt: $ID"
          else
            echo "[INFO] kein Link → init (non-interactive)…"
            eas project:init --non-interactive --force --json >/tmp/eas_init.json || true
            ID="$(jq -r '.id // empty' /tmp/eas_init.json || true)"
            if [ -z "${ID:-}" ] || ! printf "%s" "$ID" | grep -Eq '^[0-9a-fA-F-]{8}-[0-9a-fA-F-]{4}-[0-9a-fA-F-]{4}-[0-9a-fA-F-]{4}-[0-9a-fA-F-]{12}$'; then
              echo "[ERR] konnte EXPO_PROJECT_ID nicht ermitteln."; exit 1
            fi
            echo "[OK] verknüpft mit: $ID"
          fi
          echo "EXPO_PROJECT_ID=$ID" >> "$GITHUB_ENV"

      - name: (optional) expo doctor
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: npx expo-doctor || true

      - name: EAS Cloud build (Android, wait & download)
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_PROJECT_ID: ${{ env.EXPO_PROJECT_ID }}
        run: |
          set -euo pipefail
          set -e
          echo "[INFO] starte Cloud-Build…"
          eas --version && eas whoami
          eas build -p android --profile "${{ github.event.inputs.easProfile }}" --non-interactive --wait --json > build.json
          # neuestes APK ziehen (falls verfügbar)
          eas build:download --latest --platform android -o app-release.apk || true
          ls -lh app-release.apk || echo "APK noch nicht verfügbar (AAB? siehe build.json)."

      - name: Upload build metadata
        uses: actions/upload-artifact@v4
        with:
          name: build-metadata
          path: build.json

      - name: Upload APK (falls vorhanden)
        if: hashFiles('app-release.apk') != ''
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app-release.apk
