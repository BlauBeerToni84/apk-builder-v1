name: Manual APK Build (v9 guaranteed upload)
on:
  push:
    paths: [".github/force-run-apk-v9"]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install Android SDK
        run: |
          set -euxo pipefail
          ANDROID_SDK_ROOT="$HOME/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -sL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o clt.zip
          unzip -q clt.zip && rm clt.zip
          mv cmdline-tools latest
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "platforms;android-34" "build-tools;34.0.0" || true
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> "$GITHUB_ENV"
          echo "$ANDROID_SDK_ROOT/platform-tools"     >> "$GITHUB_PATH"
          echo "$ANDROID_SDK_ROOT/build-tools/34.0.0" >> "$GITHUB_PATH"

      - name: Detect Gradle wrapper
        id: gw
        run: |
          f="$(git ls-files | grep -E '(^|/)gradlew$' | head -n1 || true)"
          if [ -z "${f:-}" ]; then
            echo "❌ No gradlew found"
            exit 1
          fi
          echo "gradlew=$f" >> "$GITHUB_OUTPUT"
          echo "dir=$(dirname "$f")" >> "$GITHUB_OUTPUT"

      - name: Build Release
        working-directory: ${{ steps.gw.outputs.dir }}
        run: |
          set -euxo pipefail
          chmod +x ./gradlew || true
          ./gradlew --console=plain --no-daemon assembleRelease || true

      - name: Collect artifacts
        run: |
          set -euxo pipefail
          mkdir -p release-apks
          find . -type f -path "*/outputs/apk/release/*.apk" -exec cp {} release-apks/app-release.apk \; || true
          find . -type f -path "*/outputs/bundle/release/*.aab" -exec cp {} release-apks/app-release.aab \; || true
          # Falls nix gefunden wurde → Dummy
          if [ ! "$(ls -A release-apks)" ]; then
            echo "No APK/AAB built" > release-apks/NO_BUILD.txt
          fi
          ls -lh release-apks

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: release-apks/*
          if-no-files-found: warn
