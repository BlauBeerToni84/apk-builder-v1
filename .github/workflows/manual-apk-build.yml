name: Manual APK Build (github-only)
on:
  push:
    paths: [".github/force-run-apk"]
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Nur GitHub-eigene Actions; Android SDK per Shell
      - name: Install Android SDK (CLI)
        shell: bash
        run: |
          set -euxo pipefail
          ANDROID_SDK_ROOT="$HOME/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -sL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o clt.zip
          unzip -q clt.zip && rm clt.zip
          mv cmdline-tools latest
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" \
               "platform-tools" "platforms;android-34" "build-tools;34.0.0" || true
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          {
            echo "ANDROID_HOME=$ANDROID_SDK_ROOT"
            echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          } >> "$GITHUB_ENV"
          echo "$ANDROID_SDK_ROOT/platform-tools" >> "$GITHUB_PATH"
          echo "$ANDROID_SDK_ROOT/build-tools/34.0.0" >> "$GITHUB_PATH"

      - name: Restore keystore from secret (tolerant)
        env:
          B64: ${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "${B64:-}" ]; then echo "No keystore secret – skip"; exit 0; fi
          printf "%s" "$B64" | base64 -d > "$HOME/release.jks"
          install -m 600 "$HOME/release.jks" "$HOME/release.jks"
          ls -l "$HOME/release.jks" || true

      - name: Export signing env (if keystore present)
        shell: bash
        run: |
          if [ ! -f "$HOME/release.jks" ]; then exit 0; fi
          {
            echo "ANDROID_SIGNING_STORE_FILE=$HOME/release.jks";
            echo "ANDROID_SIGNING_STORE_PASSWORD=${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}";
            echo "ANDROID_SIGNING_KEY_ALIAS=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}";
            echo "ANDROID_SIGNING_KEY_PASSWORD=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}";
          } >> "$GITHUB_ENV"

      - name: Ensure gradlew executable
        shell: bash
        run: |
          if [ -f android/gradlew ]; then chmod +x android/gradlew;
          else echo "❌ android/gradlew fehlt"; ls -la android || true; exit 1; fi

      - name: Build (assembleRelease)
        working-directory: android
        shell: bash
        run: ./gradlew --console=plain --no-daemon :app:assembleRelease

      - name: Upload outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            android/app/build/outputs/**
            android/build/reports/**
          if-no-files-found: warn
