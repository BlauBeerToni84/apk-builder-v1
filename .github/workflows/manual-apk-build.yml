name: Manual APK Build (push-trigger, debug)
on:
  push:
    paths:
      - ".github/force-run-apk"
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - uses: gradle/actions/setup-gradle@v3
      - uses: android-actions/setup-android@v3

      - name: Debug: context & tree
        shell: bash
        run: |
          set -x
          echo "event=${GITHUB_EVENT_NAME}"
          echo "pwd=$(pwd)"; ls -la
          echo "android dir:"; ls -la android || true
          echo "probe gradlew:"; find . -maxdepth 3 -name gradlew -type f -print || true
          echo "settings/build files:"; find android -maxdepth 2 -type f \( -name "settings.gradle*" -o -name "build.gradle*" \) -print || true

      - name: Restore keystore from secret
        if: ${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 !=  }}
        env:
          B64: ${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 }}
        shell: bash
        run: |
          set -euo pipefail
          printf "%s" "$B64" | base64 -d > "$HOME/release.jks"
          install -m 600 "$HOME/release.jks" "$HOME/release.jks"
          ls -l "$HOME/release.jks" || true

      - name: Export signing env
        if: ${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 !=  }}
        env:
          STORE_PASSWORD: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
        shell: bash
        run: |
          {
            echo "ANDROID_SIGNING_STORE_FILE=$HOME/release.jks";
            echo "ANDROID_SIGNING_STORE_PASSWORD=$STORE_PASSWORD";
            echo "ANDROID_SIGNING_KEY_ALIAS=$KEY_ALIAS";
            echo "ANDROID_SIGNING_KEY_PASSWORD=$KEY_PASSWORD";
          } >> "$GITHUB_ENV"
          echo "exported signing vars"

      - name: Ensure gradlew executable
        shell: bash
        run: |
          if [ -f android/gradlew ]; then chmod +x android/gradlew; fi
          if [ ! -f android/gradlew ]; then echo "‚ùå android/gradlew fehlt"; ls -la android || true; exit 1; fi

      - name: Build (assembleRelease)
        working-directory: android
        shell: bash
        run: |
          set -euo pipefail
          ./gradlew --console=plain --no-daemon :app:assembleRelease

      - name: Upload outputs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-outputs-and-logs
          path: |
            android/app/build/outputs/**
            android/build/reports/**
          if-no-files-found: warn
