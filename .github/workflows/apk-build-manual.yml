name: APK Build Manual
on:
  workflow_dispatch:
    inputs:
      create_release:
        description: Create GitHub release (true/false)
        required: false
        default: 'true'
  repository_dispatch:
    types: [manual_apk_build]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - uses: gradle/actions/setup-gradle@v3
      - uses: android-actions/setup-android@v3

      - name: Restore keystore from secret
        shell: bash
        run: |
          set -euo pipefail
          test -n '${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 }}' || { echo 'No ANDROID_SIGNING_KEYSTORE_BASE64 secret'; exit 1; }
          base64 -d > "$HOME/release.jks" <<'B64'
${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 }}
B64
          ls -l "$HOME/release.jks"
      - name: Export signing env
        shell: bash
        run: |
          {
            echo "ANDROID_SIGNING_STORE_FILE=$HOME/release.jks";
            echo "ANDROID_SIGNING_STORE_PASSWORD=${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}";
            echo "ANDROID_SIGNING_KEY_ALIAS=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}";
            echo "ANDROID_SIGNING_KEY_PASSWORD=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}";
          } >> "$GITHUB_ENV"
      - name: Ensure gradlew executable
        run: |
          if [ -f android/gradlew ]; then chmod +x android/gradlew; fi

      - name: Build (assembleRelease)
        working-directory: android
        run: ./gradlew --console=plain --no-daemon :app:assembleRelease

      - name: Show outputs (debug)
        run: |
          ls -lah android/app/build/outputs/apk/release || true
          find android/app/build/outputs -type f -maxdepth 3 -printf "%p\n" || true

      - name: Upload APK artifact (expect signed)
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            android/app/build/outputs/apk/release/app-release.apk
            android/app/build/outputs/apk/release/*-release.apk
          if-no-files-found: error

  release:
    needs: build
    if: ${{ github.event.inputs.create_release == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-release
          path: .
      - name: Pick signed APK
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          FILE="$(ls -1 *-release.apk 2>/dev/null | head -n1 || true)"
          [[ -z "$FILE" ]] && FILE="$(ls -1 app-release.apk 2>/dev/null | head -n1 || true)"
          [[ -n "$FILE" ]] || { echo "no signed apk found"; exit 1; }
          echo "file=$FILE" >> "$GITHUB_OUTPUT"
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          files: ${{ steps.pick.outputs.file }}
