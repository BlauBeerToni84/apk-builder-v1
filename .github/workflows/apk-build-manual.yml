name: APK Build Manual
on:
  workflow_dispatch:
    inputs:
      create_release:
        description: "Create GitHub Release with (unsigned) APK"
        required: false
        default: "false"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - uses: gradle/actions/setup-gradle@v3
      - uses: android-actions/setup-android@v3

      - name: Restore keystore from secret
        shell: bash
        run: |
          set -euo pipefail
          test -n '''${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 }}''' || { echo '''No ANDROID_SIGNING_KEYSTORE_BASE64 secret'''; exit 1; }
          base64 -di > "$HOME/release.jks" <<'''B64'''
${{ secrets.ANDROID_SIGNING_KEYSTORE_BASE64 }}
B64
          install -m 600 "$HOME/release.jks" "$HOME/release.jks"
          ls -l "$HOME/release.jks"
      - name: Export signing env
        shell: bash
        run: |
          {
            echo "ANDROID_SIGNING_STORE_FILE=$HOME/release.jks";
            echo "ANDROID_SIGNING_STORE_PASSWORD=${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}";
            echo "ANDROID_SIGNING_KEY_ALIAS=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}";
            echo "ANDROID_SIGNING_KEY_PASSWORD=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}";
          } >> "$GITHUB_ENV"
      - name: Ensure gradlew executable
        run: |
          if [ -f android/gradlew ]; then chmod +x android/gradlew; fi

      - name: Build (assembleRelease)
        working-directory: android
        run: ./gradlew --console=plain --no-daemon :app:assembleRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

  release:
    needs: build
    if: ${{ github.event.inputs.create_release == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-release
          path: .
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          files: "*.apk"
