name: Android Debug APK
on: { push: {}, workflow_dispatch: {} }

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      CI: "true"
      _JAVA_OPTIONS: "-Xmx3g -XX:+UseParallelGC"
      GRADLE_OPTS: >
        -Xmx3g
        -Dorg.gradle.jvmargs=-Xmx3g
        -Dkotlin.daemon.heap.size=1024m
        -Dorg.gradle.parallel=false
        -Dorg.gradle.daemon=false
        -Dorg.gradle.workers.max=2
        -Dorg.gradle.logging.stacktrace=all
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # Caches
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml', '**/yarn.lock') }}
          restore-keys: node-${{ runner.os }}-

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with: { node-version: '20' }

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '17' }

      - name: Set up Android SDK (API 34)
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          components: platform-tools

      - name: Accept Android SDK licenses
        timeout-minutes: 5
        run: yes | sdkmanager --licenses

      - name: NPM robust config
        run: |
          npm config set legacy-peer-deps true
          npm config set fetch-retry-maxtimeout 120000
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retries 6
          npm -v && node -v

      - name: Install JS deps (robust)
        timeout-minutes: 20
        run: |
          if [ -f pnpm-lock.yaml ]; then
            corepack enable || true
            corepack prepare pnpm@8 --activate || npm i -g pnpm
            pnpm install --no-frozen-lockfile
          elif [ -f yarn.lock ]; then
            corepack enable || true
            corepack prepare yarn@4 --activate || true
            (yarn install --no-immutable || yarn install)
          elif [ -f package-lock.json ]; then
            (npm ci || npm i)
          else
            npm i
          fi

      - name: Check android tree
        run: |
          ls -la android || exit 1
          ls -la android/gradlew || exit 1
          sed -n '1,200p' android/settings.gradle || true

      # Warmup: holt Dependencies vorab, damit assemble weniger hängt
      - name: Gradle warmup (:app:dependencies)
        timeout-minutes: 10
        working-directory: android
        run: |
          chmod +x ./gradlew || true
          timeout -k 2m 10m ./gradlew :app:dependencies --no-daemon --warning-mode all --stacktrace || true

      - name: Gradle tasks (liste)
        timeout-minutes: 5
        working-directory: android
        run: |
          ./gradlew tasks --all --no-daemon --warning-mode all | tee ../gradle-tasks.txt || true

      # Build separat, mit hartem Timeout (liefert Logs auch bei Hänger)
      - name: Build APK (debug)
        timeout-minutes: 25
        working-directory: android
        run: |
          chmod +x ./gradlew || true
          ./gradlew --version || true
          ./gradlew clean --no-daemon || true
          # harter Timeout + ausführliches Logging
          timeout -k 2m 22m ./gradlew assembleDebug -x lint --info --stacktrace --no-daemon --warning-mode all | tee ../gradle-build.log \
            || timeout -k 2m 22m ./gradlew :app:assembleDebug -x lint --info --stacktrace --no-daemon --warning-mode all | tee -a ../gradle-build.log || true
          echo "Outputs:"; find app/build/outputs -type f -maxdepth 4 -print || true
          cp -r app/build/outputs ../_outputs 2>/dev/null || true

      - name: Upload Gradle info/log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-info
          path: |
            gradle-tasks.txt
            gradle-build.log
          if-no-files-found: ignore

      - name: Upload outputs (all)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            _outputs/**
            android/**/outputs/**
          if-no-files-found: warn

      - name: Upload APKs (any module/variant)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: |
            android/app/build/outputs/**/*.apk
            android/**/outputs/**/*.apk
          if-no-files-found: warn
