name: Android APK (Expo)

on:
  workflow_dispatch:
  push:
    branches: [ recover-my-app, main ]

env:
  EXPO_NO_TELEMETRY: 1
  CI: '1'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node (18)
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install JS deps + Expo Versionsabgleich
        env:
          NPM_CONFIG_LEGACY_PEER_DEPS: 'true'
        run: |
          set -e
          npm -v && node -v
          npm config set fund false
          npm config set audit false
          npx --yes expo --version || true
          npx --yes expo install --fix || true
          (npm install --legacy-peer-deps --no-optional --no-audit --no-fund || npm install --force --no-audit --no-fund)

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Expo prebuild (Android)
        run: npx --yes expo prebuild --platform android --clean
      - name: Ensure ext.react.minor (Reanimated)
        run: |
          set -e
          RN_MINOR=$(node -p "(()=>{const v=require(\"react-native/package.json\").version; const m=/^0\.(\d+)\./.exec(v); return m?m[1]:\"71\";})()")
          sed -i "1i ext { react = [ minor: ${RN_MINOR} ] }" android/build.gradle
          echo "ext.react.minor=${RN_MINOR} gesetzt"
          head -n 10 android/build.gradle || true

      - name: Disable New Architecture (Fabric)
        run: |
          sed -i 's/^newArchEnabled=.*/newArchEnabled=false/' android/gradle.properties || true
          grep -q '^newArchEnabled=' android/gradle.properties || echo newArchEnabled=false >> android/gradle.properties
          echo "--- gradle.properties (head) ---"
          sed -n '1,120p' android/gradle.properties

      - name: Ensure Gradle wrapper is executable
        run: chmod +x android/gradlew

      - name: Generate JS bundle
        run: |
          mkdir -p android/app/src/main/assets
          npx --yes react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res

      # Diagnose: einzelne Kotlin-Modul-Compiles mit in-process + --info
      - name: Kotlin diag (screens)
        working-directory: android
        env:
          ORG_GRADLE_PROJECT_org_gradle_daemon: "false"
        run: ./gradlew --no-daemon -Pkotlin.compiler.execution.strategy=in-process --info :react-native-screens:compileReleaseKotlin || true

      - name: Kotlin diag (gesture-handler)
        working-directory: android
        env:
          ORG_GRADLE_PROJECT_org_gradle_daemon: "false"
        run: ./gradlew --no-daemon -Pkotlin.compiler.execution.strategy=in-process --info :react-native-gesture-handler:compileReleaseKotlin || true

      - name: Gradle clean (Android)
        working-directory: android
        run: ./gradlew --no-daemon clean

      - name: Build Release APK via Gradle Wrapper
        working-directory: android
        env:
          ORG_GRADLE_PROJECT_org_gradle_daemon: "false"
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx3g"
        run: ./gradlew --no-daemon --stacktrace assembleRelease

      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: |
            android/app/build/outputs/apk/release/*.apk
            android/app/build/outputs/apk/debug/*.apk
